import Head from "next/head";
import Link from "next/link";
import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";

import { api } from "~/utils/api";
import type { RouterOutputs } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime"

const CreatePostWizard = () => {
  const { user } = useUser()
  console.log(user)

  if (!user) return null

  return <div className="flex gap-4 w-full">
    <img 
      src={user.profileImageUrl} 
      alt="Profile image" 
      className = "w-10 h-10 rounded-full"
    />
    <input 
      placeholder="Type some emojis!" 
      className="bg-transparent grow outline-none" 
    />
  </div>
}



type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className="flex border-b border-slate-400 p-4 gap-3">
      <img
        src = {author.profileImageUrl} 
        alt="Profile image" 
        className = "w-10 h-10 rounded-full"
      />
      <div className="flex flex-col">
        <div className="flex text-slate-300 flex gap-1">
          <span>{`@${author.username}`}</span>
          <span className="font-thin">{` Â· 1 hour ago`}</span>
          {/* Supposed to have relative time thing, but i couldn't make it work ts: ~1h1m*/}
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  )
}

export default function Home() {
  const user = useUser()
  
  const { data, isLoading } = api.posts.getAll.useQuery()
  if (!data || isLoading) return <div>Loading</div>
  if (!data) return <div>Something went wrong</div>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="w-full h-full md:max-w-2xl border-x border-slate-400">
          <div className="border-b border-slate-400 p-4 flex">
            {!user.isSignedIn && (
              <div className="flex justify-center">
                <SignInButton /> 
              </div>
            )}
            {!!user.isSignedIn && <CreatePostWizard />}
          </div>
          <div className="flex flex-col"> 
            {[...data, ...data]?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
